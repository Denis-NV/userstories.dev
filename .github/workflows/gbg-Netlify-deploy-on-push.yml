name: 'GbG app: delpoy to Netlify on "push" to "main"'

on:
  push:
    # branches:
    #   - main
    paths:
      - 'apps/grainbygrain/**'
  workflow_dispatch:

env:
  VITE_GBG_NHOST_SUBDOMAIN: ${{ secrets.VITE_GBG_NHOST_SUBDOMAIN }}
  VITE_GBG_NHOST_REGION: ${{ secrets.VITE_GBG_NHOST_REGION }}
  BRANCH_NAME: ${{ github.ref_name }}

permissions:
  pull-requests: write

jobs:
  delpoy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        id: pnpm-install

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: 'package.json'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Build Grain by Grain App and all the dependant libraries
        run: pnpm turbo run build -F grain-by-grain

      # - name: Deploy to Netlify
      #   uses: nwtgck/actions-netlify@v3
      #   with:
      #     publish-dir: './apps/grainbygrain/dist'
      #     production-branch: main
      #     production-deploy: false
      #     deploy-message: 'Deploy from GitHub Actions'
      #     enable-pull-request-comment: false
      #     enable-commit-comment: true
      #     overwrites-pull-request-comment: true
      #   env:
      #     NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
      #     NETLIFY_SITE_ID: ${{ secrets.NETLIFY_GBG_SITE_ID }}

      - name: Deploy to Netlify
        id: netlify_deploy
        run: |
          prod_flag=""
          if [ "$BRANCH_NAME" = "main" ]; then prod_flag="--prod"; fi
          netlify deploy \
            --dir dist \
            --filter grain-by-grain \
            --site ${{ secrets.NETLIFY_GBG_SITE_ID }} \
            --auth ${{ secrets.NETLIFY_AUTH_TOKEN }} \
            $prod_flag \
            --json \
            > deploy_output.json

      - name: Generate URL Preview
        id: url_preview
        if: ${{ env.BRANCH_NAME != 'main' }}
        run: |
          NETLIFY_PREVIEW_URL=$(jq -r '.deploy_url' deploy_output.json)
          echo "NETLIFY_PREVIEW_URL=$NETLIFY_PREVIEW_URL" >> "$GITHUB_OUTPUT"

      - name: Comment URL Preview on PR
        uses: actions/github-script@v7
        if: ${{ env.BRANCH_NAME != 'main' }}
        env:
          NETLIFY_PREVIEW_URL: ${{ steps.url_preview.outputs.NETLIFY_PREVIEW_URL }}
        with:
          script: |
            async function comment(){
              const result = await github.rest.repos.listPullRequestsAssociatedWithCommit({
                owner: context.repo.owner,
                repo: context.repo.repo,
                commit_sha: context.sha,
              })
              const issueNumber = result.data[0].number
              if(issueNumber){
                await github.rest.issues.createComment({
                  issue_number: issueNumber,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: 'Preview URL: ' + process.env.NETLIFY_PREVIEW_URL
                })
              }else{
                console.log('No PR found for commit ' + context.sha)
              }
            }
            comment()
