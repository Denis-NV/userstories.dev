name: 'GbG app: delpoy to Netlify on "push" to "main" and PRs'

on:
  push:
    branches:
      - main
    paths:
      - 'apps/grainbygrain/**'
  pull_request:
    types: [opened, synchronize, reopened, edited]
    paths:
      - 'apps/grainbygrain/**'
  workflow_dispatch:

env:
  VITE_GBG_NHOST_SUBDOMAIN: ${{ secrets.VITE_GBG_NHOST_SUBDOMAIN }}
  VITE_GBG_NHOST_REGION: ${{ secrets.VITE_GBG_NHOST_REGION }}
  BRANCH_NAME: ${{ github.ref_name }}

jobs:
  delpoy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        id: pnpm-install

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: 'package.json'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Build Grain by Grain App and all the dependant libraries
        run: pnpm turbo run build -F grain-by-grain

      - name: Deploy to Netlify
        id: netlify_deploy
        run: |
          prod_flag=""
          if [ "$BRANCH_NAME" = "main" ]; then prod_flag="--prod"; fi
          netlify deploy \
            --dir './apps/grainbygrain/dist' \
            --filter grain-by-grain \
            --message 'Deploy from GitHub Actions' \
            --site ${{ secrets.NETLIFY_GBG_SITE_ID }} \
            --auth ${{ secrets.NETLIFY_AUTH_TOKEN }} \
            $prod_flag \
            --json \
            > deploy_output.json

      - name: Generate URL Preview
        id: url_preview
        if: ${{ env.BRANCH_NAME != 'main' }}
        run: |
          NETLIFY_PREVIEW_URL=$(jq -r '.deploy_url' deploy_output.json)
          echo "NETLIFY_PREVIEW_URL=$NETLIFY_PREVIEW_URL" >> "$GITHUB_OUTPUT"

      - name: Print temp URL
        run: echo ${{ steps.url_preview.outputs.NETLIFY_PREVIEW_URL }}
